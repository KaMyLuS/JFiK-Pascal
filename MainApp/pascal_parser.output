Terminals unused in grammar

   REPEAT_P
   UNTIL_P
   TRUE_P
   FALSE_P
   ARRAY_P
   OF_P
   WRONG


State 127 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: program_heading SCOLON block DOT "end of file"

    2 program_heading: PROGRAM_P identifier

    3 identifier_list: identifier_list COMMA identifier
    4                | identifier

    5 block: constant_definition_part variable_declaration_part procedure_and_function_declaration_part statement_part

    6 constant_definition_part: CONST_P constant_list
    7                         | /* empty */

    8 constant_list: constant_list constant_definition
    9              | constant_definition

   10 constant_definition: identifier EQUAL constant SCOLON

   11 constant: non_string
   12         | sign non_string
   13         | STRING

   14 sign: PLUS
   15     | MINUS

   16 non_string: NUMBER
   17           | identifier
   18           | REAL_NR

   19 type_denoter: REAL_P
   20             | INT_P
   21             | STRING_P
   22             | BOOL_P

   23 variable_declaration_part: VAR_P variable_declaration_list SCOLON
   24                          | /* empty */

   25 variable_declaration_list: variable_declaration_list SCOLON variable_declaration
   26                          | variable_declaration

   27 variable_declaration: identifier_list COLON type_denoter

   28 procedure_and_function_declaration_part: proc_or_func_declaration_list SCOLON
   29                                        | /* empty */

   30 proc_or_func_declaration_list: proc_or_func_declaration_list SCOLON proc_or_func_declaration
   31                              | proc_or_func_declaration

   32 proc_or_func_declaration: procedure_declaration
   33                         | function_declaration

   34 procedure_declaration: procedure_heading SCOLON procedure_block

   35 procedure_heading: procedure_identification
   36                  | procedure_identification formal_parameter_list

   37 formal_parameter_list: LPAREN formal_parameter_section_list RPAREN

   38 formal_parameter_section_list: formal_parameter_section_list SCOLON formal_parameter_section
   39                              | formal_parameter_section

   40 formal_parameter_section: value_parameter_specification
   41                         | variable_parameter_specification
   42                         | procedural_parameter_specification
   43                         | functional_parameter_specification

   44 value_parameter_specification: identifier_list COLON identifier

   45 variable_parameter_specification: VAR_P identifier_list COLON identifier

   46 procedural_parameter_specification: procedure_heading

   47 functional_parameter_specification: function_heading

   48 procedure_identification: PROCED_P identifier

   49 procedure_block: block

   50 function_declaration: function_identification SCOLON function_block
   51                     | function_heading SCOLON function_block

   52 function_heading: FUNCTION_P identifier COLON result_type
   53                 | FUNCTION_P identifier formal_parameter_list COLON result_type

   54 result_type: INT_P
   55            | REAL_P
   56            | STRING_P
   57            | BOOL_P

   58 function_identification: FUNCTION_P identifier

   59 function_block: block

   60 statement_part: compound_statement

   61 compound_statement: BEGIN_P statement_sequence END_P

   62 statement_sequence: statement_sequence SCOLON statement
   63                   | statement

   64 statement: open_statement
   65          | closed_statement

   66 open_statement: non_labeled_open_statement

   67 closed_statement: non_labeled_closed_statement

   68 non_labeled_closed_statement: bind_statement
   69                             | procedure_statement
   70                             | compound_statement
   71                             | closed_if_statement
   72                             | closed_while_statement
   73                             | closed_for_statement
   74                             | /* empty */

   75 non_labeled_open_statement: open_if_statement
   76                           | open_while_statement
   77                           | open_for_statement

   78 open_while_statement: WHILE_P boolean_expression DO_P open_statement

   79 closed_while_statement: WHILE_P boolean_expression DO_P closed_statement

   80 open_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P open_statement

   81 closed_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P closed_statement

   82 open_if_statement: IF_P boolean_expression THEN_P statement
   83                  | IF_P boolean_expression THEN_P closed_statement ELSE_P open_statement

   84 closed_if_statement: IF_P boolean_expression THEN_P closed_statement ELSE_P closed_statement

   85 bind_statement: variable_access BIND expression

   86 variable_access: identifier

   87 procedure_statement: identifier params
   88                    | identifier

   89 params: LPAREN actual_parameter_list RPAREN

   90 actual_parameter_list: actual_parameter_list comma actual_parameter
   91                      | actual_parameter

   92 actual_parameter: expression
   93                 | expression COLON expression
   94                 | expression COLON expression COLON expression

   95 control_variable: identifier

   96 initial_value: expression

   97 direction: TO_P
   98          | DOWNTO_P

   99 final_value: expression

  100 boolean_expression: expression

  101 expression: simple_expression
  102           | simple_expression relop simple_expression

  103 simple_expression: term
  104                  | simple_expression addop term

  105 term: factor
  106     | term mulop factor

  107 factor: sign factor
  108       | exponentiation

  109 exponentiation: primary
  110               | primary STAR exponentiation

  111 primary: variable_access
  112        | unsigned_constant
  113        | function_designator
  114        | LPAREN expression RPAREN
  115        | NOT_P primary

  116 unsigned_constant: unsigned_number
  117                  | STRING

  118 unsigned_number: unsigned_integer
  119                | unsigned_real

  120 unsigned_integer: NUMBER

  121 unsigned_real: REAL_NR

  122 function_designator: identifier params

  123 addop: PLUS
  124      | MINUS
  125      | OR_P

  126 mulop: STAR
  127      | SLASH
  128      | DIV_P
  129      | MOD_P
  130      | AND_P

  131 relop: EQUAL
  132      | NOTEQ
  133      | LT
  134      | GT
  135      | LE
  136      | GE

  137 identifier: IDENT

  138 comma: COMMA


Terminals, with rules where they appear

"end of file" (0) 0 1
error (256)
PROGRAM_P (258) 2
PROCED_P (259) 48
FUNCTION_P (260) 52 53 58
BEGIN_P (261) 61
END_P (262) 61
FOR_P (263) 80 81
WHILE_P (264) 78 79
TO_P (265) 97
DOWNTO_P (266) 98
DO_P (267) 78 79 80 81
IF_P (268) 82 83 84
THEN_P (269) 82 83 84
ELSE_P (270) 83 84
REPEAT_P (271)
UNTIL_P (272)
NUMBER (273) 16 120
REAL_NR (274) 18 121
IDENT (275) 137
STRING (276) 13 117
VAR_P (277) 23 45
CONST_P (278) 6
INT_P (279) 20 54
REAL_P (280) 19 55
STRING_P (281) 21 56
BOOL_P (282) 22 57
TRUE_P (283)
FALSE_P (284)
ARRAY_P (285)
OF_P (286)
BIND (287) 80 81 85
COMMA (288) 3 138
SCOLON (289) 1 10 23 25 28 30 34 38 50 51 62
DOT (290) 1
COLON (291) 27 44 45 52 53 93 94
EQUAL (292) 10 131
NOTEQ (293) 132
GT (294) 134
GE (295) 136
LT (296) 133
LE (297) 135
PLUS (298) 14 123
MINUS (299) 15 124
SLASH (300) 127
STAR (301) 110 126
DIV_P (302) 128
MOD_P (303) 129
LPAREN (304) 37 89 114
RPAREN (305) 37 89 114
NOT_P (306) 115
AND_P (307) 130
OR_P (308) 125
WRONG (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1, on right: 0
program_heading (57)
    on left: 2, on right: 1
identifier_list (58)
    on left: 3 4, on right: 3 27 44 45
block (59)
    on left: 5, on right: 1 49 59
constant_definition_part (60)
    on left: 6 7, on right: 5
constant_list (61)
    on left: 8 9, on right: 6 8
constant_definition (62)
    on left: 10, on right: 8 9
constant (63)
    on left: 11 12 13, on right: 10
sign (64)
    on left: 14 15, on right: 12 107
non_string (65)
    on left: 16 17 18, on right: 11 12
type_denoter (66)
    on left: 19 20 21 22, on right: 27
variable_declaration_part (67)
    on left: 23 24, on right: 5
variable_declaration_list (68)
    on left: 25 26, on right: 23 25
variable_declaration (69)
    on left: 27, on right: 25 26
procedure_and_function_declaration_part (70)
    on left: 28 29, on right: 5
proc_or_func_declaration_list (71)
    on left: 30 31, on right: 28 30
proc_or_func_declaration (72)
    on left: 32 33, on right: 30 31
procedure_declaration (73)
    on left: 34, on right: 32
procedure_heading (74)
    on left: 35 36, on right: 34 46
formal_parameter_list (75)
    on left: 37, on right: 36 53
formal_parameter_section_list (76)
    on left: 38 39, on right: 37 38
formal_parameter_section (77)
    on left: 40 41 42 43, on right: 38 39
value_parameter_specification (78)
    on left: 44, on right: 40
variable_parameter_specification (79)
    on left: 45, on right: 41
procedural_parameter_specification (80)
    on left: 46, on right: 42
functional_parameter_specification (81)
    on left: 47, on right: 43
procedure_identification (82)
    on left: 48, on right: 35 36
procedure_block (83)
    on left: 49, on right: 34
function_declaration (84)
    on left: 50 51, on right: 33
function_heading (85)
    on left: 52 53, on right: 47 51
result_type (86)
    on left: 54 55 56 57, on right: 52 53
function_identification (87)
    on left: 58, on right: 50
function_block (88)
    on left: 59, on right: 50 51
statement_part (89)
    on left: 60, on right: 5
compound_statement (90)
    on left: 61, on right: 60 70
statement_sequence (91)
    on left: 62 63, on right: 61 62
statement (92)
    on left: 64 65, on right: 62 63 82
open_statement (93)
    on left: 66, on right: 64 78 80 83
closed_statement (94)
    on left: 67, on right: 65 79 81 83 84
non_labeled_closed_statement (95)
    on left: 68 69 70 71 72 73 74, on right: 67
non_labeled_open_statement (96)
    on left: 75 76 77, on right: 66
open_while_statement (97)
    on left: 78, on right: 76
closed_while_statement (98)
    on left: 79, on right: 72
open_for_statement (99)
    on left: 80, on right: 77
closed_for_statement (100)
    on left: 81, on right: 73
open_if_statement (101)
    on left: 82 83, on right: 75
closed_if_statement (102)
    on left: 84, on right: 71
bind_statement (103)
    on left: 85, on right: 68
variable_access (104)
    on left: 86, on right: 85 111
procedure_statement (105)
    on left: 87 88, on right: 69
params (106)
    on left: 89, on right: 87 122
actual_parameter_list (107)
    on left: 90 91, on right: 89 90
actual_parameter (108)
    on left: 92 93 94, on right: 90 91
control_variable (109)
    on left: 95, on right: 80 81
initial_value (110)
    on left: 96, on right: 80 81
direction (111)
    on left: 97 98, on right: 80 81
final_value (112)
    on left: 99, on right: 80 81
boolean_expression (113)
    on left: 100, on right: 78 79 82 83 84
expression (114)
    on left: 101 102, on right: 85 92 93 94 96 99 100 114
simple_expression (115)
    on left: 103 104, on right: 101 102 104
term (116)
    on left: 105 106, on right: 103 104 106
factor (117)
    on left: 107 108, on right: 105 106 107
exponentiation (118)
    on left: 109 110, on right: 108 110
primary (119)
    on left: 111 112 113 114 115, on right: 109 110 115
unsigned_constant (120)
    on left: 116 117, on right: 112
unsigned_number (121)
    on left: 118 119, on right: 116
unsigned_integer (122)
    on left: 120, on right: 118
unsigned_real (123)
    on left: 121, on right: 119
function_designator (124)
    on left: 122, on right: 113
addop (125)
    on left: 123 124 125, on right: 104
mulop (126)
    on left: 126 127 128 129 130, on right: 106
relop (127)
    on left: 131 132 133 134 135 136, on right: 102
identifier (128)
    on left: 137, on right: 2 3 4 10 17 44 45 48 52 53 58 86 87 88
    95 122
comma (129)
    on left: 138, on right: 90


State 0

    0 $accept: . program "end of file"

    PROGRAM_P  shift, and go to state 1

    program          go to state 2
    program_heading  go to state 3


State 1

    2 program_heading: PROGRAM_P . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 5


State 2

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 program: program_heading . SCOLON block DOT "end of file"

    SCOLON  shift, and go to state 7


State 4

  137 identifier: IDENT .

    $default  reduce using rule 137 (identifier)


State 5

    2 program_heading: PROGRAM_P identifier .

    $default  reduce using rule 2 (program_heading)


State 6

    0 $accept: program "end of file" .

    $default  accept


State 7

    1 program: program_heading SCOLON . block DOT "end of file"

    CONST_P  shift, and go to state 8

    $default  reduce using rule 7 (constant_definition_part)

    block                     go to state 9
    constant_definition_part  go to state 10


State 8

    6 constant_definition_part: CONST_P . constant_list

    IDENT  shift, and go to state 4

    constant_list        go to state 11
    constant_definition  go to state 12
    identifier           go to state 13


State 9

    1 program: program_heading SCOLON block . DOT "end of file"

    DOT  shift, and go to state 14


State 10

    5 block: constant_definition_part . variable_declaration_part procedure_and_function_declaration_part statement_part

    VAR_P  shift, and go to state 15

    $default  reduce using rule 24 (variable_declaration_part)

    variable_declaration_part  go to state 16


State 11

    6 constant_definition_part: CONST_P constant_list .
    8 constant_list: constant_list . constant_definition

    IDENT  shift, and go to state 4

    $default  reduce using rule 6 (constant_definition_part)

    constant_definition  go to state 17
    identifier           go to state 13


State 12

    9 constant_list: constant_definition .

    $default  reduce using rule 9 (constant_list)


State 13

   10 constant_definition: identifier . EQUAL constant SCOLON

    EQUAL  shift, and go to state 18


State 14

    1 program: program_heading SCOLON block DOT . "end of file"

    "end of file"  shift, and go to state 19


State 15

   23 variable_declaration_part: VAR_P . variable_declaration_list SCOLON

    IDENT  shift, and go to state 4

    identifier_list            go to state 20
    variable_declaration_list  go to state 21
    variable_declaration       go to state 22
    identifier                 go to state 23


State 16

    5 block: constant_definition_part variable_declaration_part . procedure_and_function_declaration_part statement_part

    PROCED_P    shift, and go to state 24
    FUNCTION_P  shift, and go to state 25

    $default  reduce using rule 29 (procedure_and_function_declaration_part)

    procedure_and_function_declaration_part  go to state 26
    proc_or_func_declaration_list            go to state 27
    proc_or_func_declaration                 go to state 28
    procedure_declaration                    go to state 29
    procedure_heading                        go to state 30
    procedure_identification                 go to state 31
    function_declaration                     go to state 32
    function_heading                         go to state 33
    function_identification                  go to state 34


State 17

    8 constant_list: constant_list constant_definition .

    $default  reduce using rule 8 (constant_list)


State 18

   10 constant_definition: identifier EQUAL . constant SCOLON

    NUMBER   shift, and go to state 35
    REAL_NR  shift, and go to state 36
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 37
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39

    constant    go to state 40
    sign        go to state 41
    non_string  go to state 42
    identifier  go to state 43


State 19

    1 program: program_heading SCOLON block DOT "end of file" .

    $default  reduce using rule 1 (program)


State 20

    3 identifier_list: identifier_list . COMMA identifier
   27 variable_declaration: identifier_list . COLON type_denoter

    COMMA  shift, and go to state 44
    COLON  shift, and go to state 45


State 21

   23 variable_declaration_part: VAR_P variable_declaration_list . SCOLON
   25 variable_declaration_list: variable_declaration_list . SCOLON variable_declaration

    SCOLON  shift, and go to state 46


State 22

   26 variable_declaration_list: variable_declaration .

    $default  reduce using rule 26 (variable_declaration_list)


State 23

    4 identifier_list: identifier .

    $default  reduce using rule 4 (identifier_list)


State 24

   48 procedure_identification: PROCED_P . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 47


State 25

   52 function_heading: FUNCTION_P . identifier COLON result_type
   53                 | FUNCTION_P . identifier formal_parameter_list COLON result_type
   58 function_identification: FUNCTION_P . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 48


State 26

    5 block: constant_definition_part variable_declaration_part procedure_and_function_declaration_part . statement_part

    BEGIN_P  shift, and go to state 49

    statement_part      go to state 50
    compound_statement  go to state 51


State 27

   28 procedure_and_function_declaration_part: proc_or_func_declaration_list . SCOLON
   30 proc_or_func_declaration_list: proc_or_func_declaration_list . SCOLON proc_or_func_declaration

    SCOLON  shift, and go to state 52


State 28

   31 proc_or_func_declaration_list: proc_or_func_declaration .

    $default  reduce using rule 31 (proc_or_func_declaration_list)


State 29

   32 proc_or_func_declaration: procedure_declaration .

    $default  reduce using rule 32 (proc_or_func_declaration)


State 30

   34 procedure_declaration: procedure_heading . SCOLON procedure_block

    SCOLON  shift, and go to state 53


State 31

   35 procedure_heading: procedure_identification .
   36                  | procedure_identification . formal_parameter_list

    LPAREN  shift, and go to state 54

    $default  reduce using rule 35 (procedure_heading)

    formal_parameter_list  go to state 55


State 32

   33 proc_or_func_declaration: function_declaration .

    $default  reduce using rule 33 (proc_or_func_declaration)


State 33

   51 function_declaration: function_heading . SCOLON function_block

    SCOLON  shift, and go to state 56


State 34

   50 function_declaration: function_identification . SCOLON function_block

    SCOLON  shift, and go to state 57


State 35

   16 non_string: NUMBER .

    $default  reduce using rule 16 (non_string)


State 36

   18 non_string: REAL_NR .

    $default  reduce using rule 18 (non_string)


State 37

   13 constant: STRING .

    $default  reduce using rule 13 (constant)


State 38

   14 sign: PLUS .

    $default  reduce using rule 14 (sign)


State 39

   15 sign: MINUS .

    $default  reduce using rule 15 (sign)


State 40

   10 constant_definition: identifier EQUAL constant . SCOLON

    SCOLON  shift, and go to state 58


State 41

   12 constant: sign . non_string

    NUMBER   shift, and go to state 35
    REAL_NR  shift, and go to state 36
    IDENT    shift, and go to state 4

    non_string  go to state 59
    identifier  go to state 43


State 42

   11 constant: non_string .

    $default  reduce using rule 11 (constant)


State 43

   17 non_string: identifier .

    $default  reduce using rule 17 (non_string)


State 44

    3 identifier_list: identifier_list COMMA . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 60


State 45

   27 variable_declaration: identifier_list COLON . type_denoter

    INT_P     shift, and go to state 61
    REAL_P    shift, and go to state 62
    STRING_P  shift, and go to state 63
    BOOL_P    shift, and go to state 64

    type_denoter  go to state 65


State 46

   23 variable_declaration_part: VAR_P variable_declaration_list SCOLON .
   25 variable_declaration_list: variable_declaration_list SCOLON . variable_declaration

    IDENT  shift, and go to state 4

    $default  reduce using rule 23 (variable_declaration_part)

    identifier_list       go to state 20
    variable_declaration  go to state 66
    identifier            go to state 23


State 47

   48 procedure_identification: PROCED_P identifier .

    $default  reduce using rule 48 (procedure_identification)


State 48

   52 function_heading: FUNCTION_P identifier . COLON result_type
   53                 | FUNCTION_P identifier . formal_parameter_list COLON result_type
   58 function_identification: FUNCTION_P identifier .

    COLON   shift, and go to state 67
    LPAREN  shift, and go to state 54

    $default  reduce using rule 58 (function_identification)

    formal_parameter_list  go to state 68


State 49

   61 compound_statement: BEGIN_P . statement_sequence END_P

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    statement_sequence            go to state 73
    statement                     go to state 74
    open_statement                go to state 75
    closed_statement              go to state 76
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 50

    5 block: constant_definition_part variable_declaration_part procedure_and_function_declaration_part statement_part .

    $default  reduce using rule 5 (block)


State 51

   60 statement_part: compound_statement .

    $default  reduce using rule 60 (statement_part)


State 52

   28 procedure_and_function_declaration_part: proc_or_func_declaration_list SCOLON .
   30 proc_or_func_declaration_list: proc_or_func_declaration_list SCOLON . proc_or_func_declaration

    PROCED_P    shift, and go to state 24
    FUNCTION_P  shift, and go to state 25

    $default  reduce using rule 28 (procedure_and_function_declaration_part)

    proc_or_func_declaration  go to state 89
    procedure_declaration     go to state 29
    procedure_heading         go to state 30
    procedure_identification  go to state 31
    function_declaration      go to state 32
    function_heading          go to state 33
    function_identification   go to state 34


State 53

   34 procedure_declaration: procedure_heading SCOLON . procedure_block

    CONST_P  shift, and go to state 8

    $default  reduce using rule 7 (constant_definition_part)

    block                     go to state 90
    constant_definition_part  go to state 10
    procedure_block           go to state 91


State 54

   37 formal_parameter_list: LPAREN . formal_parameter_section_list RPAREN

    PROCED_P    shift, and go to state 24
    FUNCTION_P  shift, and go to state 92
    IDENT       shift, and go to state 4
    VAR_P       shift, and go to state 93

    identifier_list                     go to state 94
    procedure_heading                   go to state 95
    formal_parameter_section_list       go to state 96
    formal_parameter_section            go to state 97
    value_parameter_specification       go to state 98
    variable_parameter_specification    go to state 99
    procedural_parameter_specification  go to state 100
    functional_parameter_specification  go to state 101
    procedure_identification            go to state 31
    function_heading                    go to state 102
    identifier                          go to state 23


State 55

   36 procedure_heading: procedure_identification formal_parameter_list .

    $default  reduce using rule 36 (procedure_heading)


State 56

   51 function_declaration: function_heading SCOLON . function_block

    CONST_P  shift, and go to state 8

    $default  reduce using rule 7 (constant_definition_part)

    block                     go to state 103
    constant_definition_part  go to state 10
    function_block            go to state 104


State 57

   50 function_declaration: function_identification SCOLON . function_block

    CONST_P  shift, and go to state 8

    $default  reduce using rule 7 (constant_definition_part)

    block                     go to state 103
    constant_definition_part  go to state 10
    function_block            go to state 105


State 58

   10 constant_definition: identifier EQUAL constant SCOLON .

    $default  reduce using rule 10 (constant_definition)


State 59

   12 constant: sign non_string .

    $default  reduce using rule 12 (constant)


State 60

    3 identifier_list: identifier_list COMMA identifier .

    $default  reduce using rule 3 (identifier_list)


State 61

   20 type_denoter: INT_P .

    $default  reduce using rule 20 (type_denoter)


State 62

   19 type_denoter: REAL_P .

    $default  reduce using rule 19 (type_denoter)


State 63

   21 type_denoter: STRING_P .

    $default  reduce using rule 21 (type_denoter)


State 64

   22 type_denoter: BOOL_P .

    $default  reduce using rule 22 (type_denoter)


State 65

   27 variable_declaration: identifier_list COLON type_denoter .

    $default  reduce using rule 27 (variable_declaration)


State 66

   25 variable_declaration_list: variable_declaration_list SCOLON variable_declaration .

    $default  reduce using rule 25 (variable_declaration_list)


State 67

   52 function_heading: FUNCTION_P identifier COLON . result_type

    INT_P     shift, and go to state 106
    REAL_P    shift, and go to state 107
    STRING_P  shift, and go to state 108
    BOOL_P    shift, and go to state 109

    result_type  go to state 110


State 68

   53 function_heading: FUNCTION_P identifier formal_parameter_list . COLON result_type

    COLON  shift, and go to state 111


State 69

   80 open_for_statement: FOR_P . control_variable BIND initial_value direction final_value DO_P open_statement
   81 closed_for_statement: FOR_P . control_variable BIND initial_value direction final_value DO_P closed_statement

    IDENT  shift, and go to state 4

    control_variable  go to state 112
    identifier        go to state 113


State 70

   78 open_while_statement: WHILE_P . boolean_expression DO_P open_statement
   79 closed_while_statement: WHILE_P . boolean_expression DO_P closed_statement

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    boolean_expression   go to state 121
    expression           go to state 122
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 71

   82 open_if_statement: IF_P . boolean_expression THEN_P statement
   83                  | IF_P . boolean_expression THEN_P closed_statement ELSE_P open_statement
   84 closed_if_statement: IF_P . boolean_expression THEN_P closed_statement ELSE_P closed_statement

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    boolean_expression   go to state 134
    expression           go to state 122
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 72

   70 non_labeled_closed_statement: compound_statement .

    $default  reduce using rule 70 (non_labeled_closed_statement)


State 73

   61 compound_statement: BEGIN_P statement_sequence . END_P
   62 statement_sequence: statement_sequence . SCOLON statement

    END_P   shift, and go to state 135
    SCOLON  shift, and go to state 136


State 74

   63 statement_sequence: statement .

    $default  reduce using rule 63 (statement_sequence)


State 75

   64 statement: open_statement .

    $default  reduce using rule 64 (statement)


State 76

   65 statement: closed_statement .

    $default  reduce using rule 65 (statement)


State 77

   67 closed_statement: non_labeled_closed_statement .

    $default  reduce using rule 67 (closed_statement)


State 78

   66 open_statement: non_labeled_open_statement .

    $default  reduce using rule 66 (open_statement)


State 79

   76 non_labeled_open_statement: open_while_statement .

    $default  reduce using rule 76 (non_labeled_open_statement)


State 80

   72 non_labeled_closed_statement: closed_while_statement .

    $default  reduce using rule 72 (non_labeled_closed_statement)


State 81

   77 non_labeled_open_statement: open_for_statement .

    $default  reduce using rule 77 (non_labeled_open_statement)


State 82

   73 non_labeled_closed_statement: closed_for_statement .

    $default  reduce using rule 73 (non_labeled_closed_statement)


State 83

   75 non_labeled_open_statement: open_if_statement .

    $default  reduce using rule 75 (non_labeled_open_statement)


State 84

   71 non_labeled_closed_statement: closed_if_statement .

    $default  reduce using rule 71 (non_labeled_closed_statement)


State 85

   68 non_labeled_closed_statement: bind_statement .

    $default  reduce using rule 68 (non_labeled_closed_statement)


State 86

   85 bind_statement: variable_access . BIND expression

    BIND  shift, and go to state 137


State 87

   69 non_labeled_closed_statement: procedure_statement .

    $default  reduce using rule 69 (non_labeled_closed_statement)


State 88

   86 variable_access: identifier .
   87 procedure_statement: identifier . params
   88                    | identifier .

    LPAREN  shift, and go to state 138

    BIND      reduce using rule 86 (variable_access)
    $default  reduce using rule 88 (procedure_statement)

    params  go to state 139


State 89

   30 proc_or_func_declaration_list: proc_or_func_declaration_list SCOLON proc_or_func_declaration .

    $default  reduce using rule 30 (proc_or_func_declaration_list)


State 90

   49 procedure_block: block .

    $default  reduce using rule 49 (procedure_block)


State 91

   34 procedure_declaration: procedure_heading SCOLON procedure_block .

    $default  reduce using rule 34 (procedure_declaration)


State 92

   52 function_heading: FUNCTION_P . identifier COLON result_type
   53                 | FUNCTION_P . identifier formal_parameter_list COLON result_type

    IDENT  shift, and go to state 4

    identifier  go to state 140


State 93

   45 variable_parameter_specification: VAR_P . identifier_list COLON identifier

    IDENT  shift, and go to state 4

    identifier_list  go to state 141
    identifier       go to state 23


State 94

    3 identifier_list: identifier_list . COMMA identifier
   44 value_parameter_specification: identifier_list . COLON identifier

    COMMA  shift, and go to state 44
    COLON  shift, and go to state 142


State 95

   46 procedural_parameter_specification: procedure_heading .

    $default  reduce using rule 46 (procedural_parameter_specification)


State 96

   37 formal_parameter_list: LPAREN formal_parameter_section_list . RPAREN
   38 formal_parameter_section_list: formal_parameter_section_list . SCOLON formal_parameter_section

    SCOLON  shift, and go to state 143
    RPAREN  shift, and go to state 144


State 97

   39 formal_parameter_section_list: formal_parameter_section .

    $default  reduce using rule 39 (formal_parameter_section_list)


State 98

   40 formal_parameter_section: value_parameter_specification .

    $default  reduce using rule 40 (formal_parameter_section)


State 99

   41 formal_parameter_section: variable_parameter_specification .

    $default  reduce using rule 41 (formal_parameter_section)


State 100

   42 formal_parameter_section: procedural_parameter_specification .

    $default  reduce using rule 42 (formal_parameter_section)


State 101

   43 formal_parameter_section: functional_parameter_specification .

    $default  reduce using rule 43 (formal_parameter_section)


State 102

   47 functional_parameter_specification: function_heading .

    $default  reduce using rule 47 (functional_parameter_specification)


State 103

   59 function_block: block .

    $default  reduce using rule 59 (function_block)


State 104

   51 function_declaration: function_heading SCOLON function_block .

    $default  reduce using rule 51 (function_declaration)


State 105

   50 function_declaration: function_identification SCOLON function_block .

    $default  reduce using rule 50 (function_declaration)


State 106

   54 result_type: INT_P .

    $default  reduce using rule 54 (result_type)


State 107

   55 result_type: REAL_P .

    $default  reduce using rule 55 (result_type)


State 108

   56 result_type: STRING_P .

    $default  reduce using rule 56 (result_type)


State 109

   57 result_type: BOOL_P .

    $default  reduce using rule 57 (result_type)


State 110

   52 function_heading: FUNCTION_P identifier COLON result_type .

    $default  reduce using rule 52 (function_heading)


State 111

   53 function_heading: FUNCTION_P identifier formal_parameter_list COLON . result_type

    INT_P     shift, and go to state 106
    REAL_P    shift, and go to state 107
    STRING_P  shift, and go to state 108
    BOOL_P    shift, and go to state 109

    result_type  go to state 145


State 112

   80 open_for_statement: FOR_P control_variable . BIND initial_value direction final_value DO_P open_statement
   81 closed_for_statement: FOR_P control_variable . BIND initial_value direction final_value DO_P closed_statement

    BIND  shift, and go to state 146


State 113

   95 control_variable: identifier .

    $default  reduce using rule 95 (control_variable)


State 114

  120 unsigned_integer: NUMBER .

    $default  reduce using rule 120 (unsigned_integer)


State 115

  121 unsigned_real: REAL_NR .

    $default  reduce using rule 121 (unsigned_real)


State 116

  117 unsigned_constant: STRING .

    $default  reduce using rule 117 (unsigned_constant)


State 117

  114 primary: LPAREN . expression RPAREN

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    expression           go to state 147
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 118

  115 primary: NOT_P . primary

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    variable_access      go to state 120
    primary              go to state 148
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 119

  107 factor: sign . factor

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    factor               go to state 149
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 120

  111 primary: variable_access .

    $default  reduce using rule 111 (primary)


State 121

   78 open_while_statement: WHILE_P boolean_expression . DO_P open_statement
   79 closed_while_statement: WHILE_P boolean_expression . DO_P closed_statement

    DO_P  shift, and go to state 150


State 122

  100 boolean_expression: expression .

    $default  reduce using rule 100 (boolean_expression)


State 123

  101 expression: simple_expression .
  102           | simple_expression . relop simple_expression
  104 simple_expression: simple_expression . addop term

    EQUAL  shift, and go to state 151
    NOTEQ  shift, and go to state 152
    GT     shift, and go to state 153
    GE     shift, and go to state 154
    LT     shift, and go to state 155
    LE     shift, and go to state 156
    PLUS   shift, and go to state 157
    MINUS  shift, and go to state 158
    OR_P   shift, and go to state 159

    $default  reduce using rule 101 (expression)

    addop  go to state 160
    relop  go to state 161


State 124

  103 simple_expression: term .
  106 term: term . mulop factor

    SLASH  shift, and go to state 162
    STAR   shift, and go to state 163
    DIV_P  shift, and go to state 164
    MOD_P  shift, and go to state 165
    AND_P  shift, and go to state 166

    $default  reduce using rule 103 (simple_expression)

    mulop  go to state 167


State 125

  105 term: factor .

    $default  reduce using rule 105 (term)


State 126

  108 factor: exponentiation .

    $default  reduce using rule 108 (factor)


State 127

  109 exponentiation: primary .
  110               | primary . STAR exponentiation

    STAR  shift, and go to state 168

    STAR      [reduce using rule 109 (exponentiation)]
    $default  reduce using rule 109 (exponentiation)


State 128

  112 primary: unsigned_constant .

    $default  reduce using rule 112 (primary)


State 129

  116 unsigned_constant: unsigned_number .

    $default  reduce using rule 116 (unsigned_constant)


State 130

  118 unsigned_number: unsigned_integer .

    $default  reduce using rule 118 (unsigned_number)


State 131

  119 unsigned_number: unsigned_real .

    $default  reduce using rule 119 (unsigned_number)


State 132

  113 primary: function_designator .

    $default  reduce using rule 113 (primary)


State 133

   86 variable_access: identifier .
  122 function_designator: identifier . params

    LPAREN  shift, and go to state 138

    $default  reduce using rule 86 (variable_access)

    params  go to state 169


State 134

   82 open_if_statement: IF_P boolean_expression . THEN_P statement
   83                  | IF_P boolean_expression . THEN_P closed_statement ELSE_P open_statement
   84 closed_if_statement: IF_P boolean_expression . THEN_P closed_statement ELSE_P closed_statement

    THEN_P  shift, and go to state 170


State 135

   61 compound_statement: BEGIN_P statement_sequence END_P .

    $default  reduce using rule 61 (compound_statement)


State 136

   62 statement_sequence: statement_sequence SCOLON . statement

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    statement                     go to state 171
    open_statement                go to state 75
    closed_statement              go to state 76
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 137

   85 bind_statement: variable_access BIND . expression

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    expression           go to state 172
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 138

   89 params: LPAREN . actual_parameter_list RPAREN

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                   go to state 119
    variable_access        go to state 120
    actual_parameter_list  go to state 173
    actual_parameter       go to state 174
    expression             go to state 175
    simple_expression      go to state 123
    term                   go to state 124
    factor                 go to state 125
    exponentiation         go to state 126
    primary                go to state 127
    unsigned_constant      go to state 128
    unsigned_number        go to state 129
    unsigned_integer       go to state 130
    unsigned_real          go to state 131
    function_designator    go to state 132
    identifier             go to state 133


State 139

   87 procedure_statement: identifier params .

    $default  reduce using rule 87 (procedure_statement)


State 140

   52 function_heading: FUNCTION_P identifier . COLON result_type
   53                 | FUNCTION_P identifier . formal_parameter_list COLON result_type

    COLON   shift, and go to state 67
    LPAREN  shift, and go to state 54

    formal_parameter_list  go to state 68


State 141

    3 identifier_list: identifier_list . COMMA identifier
   45 variable_parameter_specification: VAR_P identifier_list . COLON identifier

    COMMA  shift, and go to state 44
    COLON  shift, and go to state 176


State 142

   44 value_parameter_specification: identifier_list COLON . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 177


State 143

   38 formal_parameter_section_list: formal_parameter_section_list SCOLON . formal_parameter_section

    PROCED_P    shift, and go to state 24
    FUNCTION_P  shift, and go to state 92
    IDENT       shift, and go to state 4
    VAR_P       shift, and go to state 93

    identifier_list                     go to state 94
    procedure_heading                   go to state 95
    formal_parameter_section            go to state 178
    value_parameter_specification       go to state 98
    variable_parameter_specification    go to state 99
    procedural_parameter_specification  go to state 100
    functional_parameter_specification  go to state 101
    procedure_identification            go to state 31
    function_heading                    go to state 102
    identifier                          go to state 23


State 144

   37 formal_parameter_list: LPAREN formal_parameter_section_list RPAREN .

    $default  reduce using rule 37 (formal_parameter_list)


State 145

   53 function_heading: FUNCTION_P identifier formal_parameter_list COLON result_type .

    $default  reduce using rule 53 (function_heading)


State 146

   80 open_for_statement: FOR_P control_variable BIND . initial_value direction final_value DO_P open_statement
   81 closed_for_statement: FOR_P control_variable BIND . initial_value direction final_value DO_P closed_statement

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    initial_value        go to state 179
    expression           go to state 180
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 147

  114 primary: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 181


State 148

  115 primary: NOT_P primary .

    $default  reduce using rule 115 (primary)


State 149

  107 factor: sign factor .

    $default  reduce using rule 107 (factor)


State 150

   78 open_while_statement: WHILE_P boolean_expression DO_P . open_statement
   79 closed_while_statement: WHILE_P boolean_expression DO_P . closed_statement

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    open_statement                go to state 182
    closed_statement              go to state 183
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 151

  131 relop: EQUAL .

    $default  reduce using rule 131 (relop)


State 152

  132 relop: NOTEQ .

    $default  reduce using rule 132 (relop)


State 153

  134 relop: GT .

    $default  reduce using rule 134 (relop)


State 154

  136 relop: GE .

    $default  reduce using rule 136 (relop)


State 155

  133 relop: LT .

    $default  reduce using rule 133 (relop)


State 156

  135 relop: LE .

    $default  reduce using rule 135 (relop)


State 157

  123 addop: PLUS .

    $default  reduce using rule 123 (addop)


State 158

  124 addop: MINUS .

    $default  reduce using rule 124 (addop)


State 159

  125 addop: OR_P .

    $default  reduce using rule 125 (addop)


State 160

  104 simple_expression: simple_expression addop . term

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    term                 go to state 184
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 161

  102 expression: simple_expression relop . simple_expression

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    simple_expression    go to state 185
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 162

  127 mulop: SLASH .

    $default  reduce using rule 127 (mulop)


State 163

  126 mulop: STAR .

    $default  reduce using rule 126 (mulop)


State 164

  128 mulop: DIV_P .

    $default  reduce using rule 128 (mulop)


State 165

  129 mulop: MOD_P .

    $default  reduce using rule 129 (mulop)


State 166

  130 mulop: AND_P .

    $default  reduce using rule 130 (mulop)


State 167

  106 term: term mulop . factor

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    factor               go to state 186
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 168

  110 exponentiation: primary STAR . exponentiation

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    variable_access      go to state 120
    exponentiation       go to state 187
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 169

  122 function_designator: identifier params .

    $default  reduce using rule 122 (function_designator)


State 170

   82 open_if_statement: IF_P boolean_expression THEN_P . statement
   83                  | IF_P boolean_expression THEN_P . closed_statement ELSE_P open_statement
   84 closed_if_statement: IF_P boolean_expression THEN_P . closed_statement ELSE_P closed_statement

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    statement                     go to state 188
    open_statement                go to state 75
    closed_statement              go to state 189
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 171

   62 statement_sequence: statement_sequence SCOLON statement .

    $default  reduce using rule 62 (statement_sequence)


State 172

   85 bind_statement: variable_access BIND expression .

    $default  reduce using rule 85 (bind_statement)


State 173

   89 params: LPAREN actual_parameter_list . RPAREN
   90 actual_parameter_list: actual_parameter_list . comma actual_parameter

    COMMA   shift, and go to state 190
    RPAREN  shift, and go to state 191

    comma  go to state 192


State 174

   91 actual_parameter_list: actual_parameter .

    $default  reduce using rule 91 (actual_parameter_list)


State 175

   92 actual_parameter: expression .
   93                 | expression . COLON expression
   94                 | expression . COLON expression COLON expression

    COLON  shift, and go to state 193

    $default  reduce using rule 92 (actual_parameter)


State 176

   45 variable_parameter_specification: VAR_P identifier_list COLON . identifier

    IDENT  shift, and go to state 4

    identifier  go to state 194


State 177

   44 value_parameter_specification: identifier_list COLON identifier .

    $default  reduce using rule 44 (value_parameter_specification)


State 178

   38 formal_parameter_section_list: formal_parameter_section_list SCOLON formal_parameter_section .

    $default  reduce using rule 38 (formal_parameter_section_list)


State 179

   80 open_for_statement: FOR_P control_variable BIND initial_value . direction final_value DO_P open_statement
   81 closed_for_statement: FOR_P control_variable BIND initial_value . direction final_value DO_P closed_statement

    TO_P      shift, and go to state 195
    DOWNTO_P  shift, and go to state 196

    direction  go to state 197


State 180

   96 initial_value: expression .

    $default  reduce using rule 96 (initial_value)


State 181

  114 primary: LPAREN expression RPAREN .

    $default  reduce using rule 114 (primary)


State 182

   78 open_while_statement: WHILE_P boolean_expression DO_P open_statement .

    $default  reduce using rule 78 (open_while_statement)


State 183

   79 closed_while_statement: WHILE_P boolean_expression DO_P closed_statement .

    $default  reduce using rule 79 (closed_while_statement)


State 184

  104 simple_expression: simple_expression addop term .
  106 term: term . mulop factor

    SLASH  shift, and go to state 162
    STAR   shift, and go to state 163
    DIV_P  shift, and go to state 164
    MOD_P  shift, and go to state 165
    AND_P  shift, and go to state 166

    $default  reduce using rule 104 (simple_expression)

    mulop  go to state 167


State 185

  102 expression: simple_expression relop simple_expression .
  104 simple_expression: simple_expression . addop term

    PLUS   shift, and go to state 157
    MINUS  shift, and go to state 158
    OR_P   shift, and go to state 159

    $default  reduce using rule 102 (expression)

    addop  go to state 160


State 186

  106 term: term mulop factor .

    $default  reduce using rule 106 (term)


State 187

  110 exponentiation: primary STAR exponentiation .

    $default  reduce using rule 110 (exponentiation)


State 188

   82 open_if_statement: IF_P boolean_expression THEN_P statement .

    $default  reduce using rule 82 (open_if_statement)


State 189

   65 statement: closed_statement .
   83 open_if_statement: IF_P boolean_expression THEN_P closed_statement . ELSE_P open_statement
   84 closed_if_statement: IF_P boolean_expression THEN_P closed_statement . ELSE_P closed_statement

    ELSE_P  shift, and go to state 198

    $default  reduce using rule 65 (statement)


State 190

  138 comma: COMMA .

    $default  reduce using rule 138 (comma)


State 191

   89 params: LPAREN actual_parameter_list RPAREN .

    $default  reduce using rule 89 (params)


State 192

   90 actual_parameter_list: actual_parameter_list comma . actual_parameter

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    actual_parameter     go to state 199
    expression           go to state 175
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 193

   93 actual_parameter: expression COLON . expression
   94                 | expression COLON . expression COLON expression

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    expression           go to state 200
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 194

   45 variable_parameter_specification: VAR_P identifier_list COLON identifier .

    $default  reduce using rule 45 (variable_parameter_specification)


State 195

   97 direction: TO_P .

    $default  reduce using rule 97 (direction)


State 196

   98 direction: DOWNTO_P .

    $default  reduce using rule 98 (direction)


State 197

   80 open_for_statement: FOR_P control_variable BIND initial_value direction . final_value DO_P open_statement
   81 closed_for_statement: FOR_P control_variable BIND initial_value direction . final_value DO_P closed_statement

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    final_value          go to state 201
    expression           go to state 202
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 198

   83 open_if_statement: IF_P boolean_expression THEN_P closed_statement ELSE_P . open_statement
   84 closed_if_statement: IF_P boolean_expression THEN_P closed_statement ELSE_P . closed_statement

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    open_statement                go to state 203
    closed_statement              go to state 204
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 199

   90 actual_parameter_list: actual_parameter_list comma actual_parameter .

    $default  reduce using rule 90 (actual_parameter_list)


State 200

   93 actual_parameter: expression COLON expression .
   94                 | expression COLON expression . COLON expression

    COLON  shift, and go to state 205

    $default  reduce using rule 93 (actual_parameter)


State 201

   80 open_for_statement: FOR_P control_variable BIND initial_value direction final_value . DO_P open_statement
   81 closed_for_statement: FOR_P control_variable BIND initial_value direction final_value . DO_P closed_statement

    DO_P  shift, and go to state 206


State 202

   99 final_value: expression .

    $default  reduce using rule 99 (final_value)


State 203

   83 open_if_statement: IF_P boolean_expression THEN_P closed_statement ELSE_P open_statement .

    $default  reduce using rule 83 (open_if_statement)


State 204

   84 closed_if_statement: IF_P boolean_expression THEN_P closed_statement ELSE_P closed_statement .

    $default  reduce using rule 84 (closed_if_statement)


State 205

   94 actual_parameter: expression COLON expression COLON . expression

    NUMBER   shift, and go to state 114
    REAL_NR  shift, and go to state 115
    IDENT    shift, and go to state 4
    STRING   shift, and go to state 116
    PLUS     shift, and go to state 38
    MINUS    shift, and go to state 39
    LPAREN   shift, and go to state 117
    NOT_P    shift, and go to state 118

    sign                 go to state 119
    variable_access      go to state 120
    expression           go to state 207
    simple_expression    go to state 123
    term                 go to state 124
    factor               go to state 125
    exponentiation       go to state 126
    primary              go to state 127
    unsigned_constant    go to state 128
    unsigned_number      go to state 129
    unsigned_integer     go to state 130
    unsigned_real        go to state 131
    function_designator  go to state 132
    identifier           go to state 133


State 206

   80 open_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P . open_statement
   81 closed_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P . closed_statement

    BEGIN_P  shift, and go to state 49
    FOR_P    shift, and go to state 69
    WHILE_P  shift, and go to state 70
    IF_P     shift, and go to state 71
    IDENT    shift, and go to state 4

    $default  reduce using rule 74 (non_labeled_closed_statement)

    compound_statement            go to state 72
    open_statement                go to state 208
    closed_statement              go to state 209
    non_labeled_closed_statement  go to state 77
    non_labeled_open_statement    go to state 78
    open_while_statement          go to state 79
    closed_while_statement        go to state 80
    open_for_statement            go to state 81
    closed_for_statement          go to state 82
    open_if_statement             go to state 83
    closed_if_statement           go to state 84
    bind_statement                go to state 85
    variable_access               go to state 86
    procedure_statement           go to state 87
    identifier                    go to state 88


State 207

   94 actual_parameter: expression COLON expression COLON expression .

    $default  reduce using rule 94 (actual_parameter)


State 208

   80 open_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P open_statement .

    $default  reduce using rule 80 (open_for_statement)


State 209

   81 closed_for_statement: FOR_P control_variable BIND initial_value direction final_value DO_P closed_statement .

    $default  reduce using rule 81 (closed_for_statement)
